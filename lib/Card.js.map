{"version":3,"sources":["../src/Card.js"],"names":["ProgressBar","Card","React","Component","constructor","props","title","subtitle","currentIndex","titleCollection","subtitleCollection","self","state","progress","cvs","createRef","componentWillUnmount","shouldContinueHeartbeat","render","titles","map","index","subtitles","isActive","hasProgress"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,IAAN,SAAmBC,MAAMC,SAAzB,CAAkC;AACxCC,aAAYC,KAAZ,EAAkB;AACjB,QAAMA,KAAN;AACA,QAAM;AACLC,QADK;AAELC,WAFK;AAGLC;AAHK,MAIFH,KAJJ;AAKA,QAAMI,kBAAkBH,SAAS,EAAjC;AACA,QAAMI,qBAAqBH,YAAY,EAAvC;AACA,QAAMI,OAAO,IAAb;AACAA,OAAKC,KAAL,GAAa;AACZJ,eADY;AAEZF,UAAM,CAAC,GAAGG,eAAJ,CAFM;AAGZF,aAAS,CAAC,GAAGG,kBAAJ,CAHG;AAIZG,aAAUR,MAAMQ,QAAN,IAAkB;AAJhB,GAAb;AAMAF,OAAKG,GAAL,GAAWZ,MAAMa,SAAN,EAAX;AACA;;AAEDC,wBAAsB;AACrB,OAAKC,uBAAL,GAA+B,KAA/B;AACA;AACDC,UAAQ;;AAEP,QAAMC,SAAS,KAAKP,KAAL,CAAWN,KAAX,CAAiBc,GAAjB,CAAqB,CAACd,KAAD,EAAQe,KAAR,KAAgB;AAAA;AAAA,KAAK,WAAU,yBAAf,EAAyC,KAAKA,KAA9C;AAAsDf;AAAtD,GAArC,CAAf;AACA,QAAMgB,YAAY,KAAKV,KAAL,CAAWL,QAAX,CAAoBa,GAApB,CAAwB,CAACb,QAAD,EAAWc,KAAX,KAAmB;AAAA;AAAA,KAAK,WAAU,+BAAf,EAA+C,KAAKA,KAApD;AAA4Dd;AAA5D,GAA3C,CAAlB;;AAEA,SACC;AAAA;AAAA,KAAK,WAAU,MAAf;AACC;AAAA;AAAA,MAAK,WAAU,YAAf;AACC;AAAA;AAAA,OAAK,WAAU,OAAf;AAAwB,UAAKF,KAAL,CAAWG,YAAX,GAA0B;AAAlD,KADD;AAEC,wBAAC,gBAAD,IAAkB,UAAU,KAA5B,EAAmC,QAAQ,KAAKI,KAAL,CAAWW,QAAtD,GAFD;AAGC;AAAA;AAAA,OAAK,WAAU,cAAf;AAA+BJ;AAA/B,KAHD;AAIC;AAAA;AAAA,OAAK,WAAU,iBAAf;AAAkCG;AAAlC,KAJD;AAKC,iCAAK,WAAU,QAAf;AALD,IADD;AAQE,QAAKjB,KAAL,CAAWmB,WAAX,GAA0B,oBAAC,WAAD,IAAa,UAAU,KAAKZ,KAAL,CAAWC,QAAlC,GAA1B,GAAyE;AAR3E,GADD;AAaA;AAzCuC","file":"Card.js","sourcesContent":["import { ProgressBar } from \"./ProgressBar.js\"\n\nexport class Card extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t\tconst {\n\t\t\ttitle,\n\t\t\tsubtitle,\n\t\t\tcurrentIndex,\n\t\t} = props\n\t\tconst titleCollection = title || []\n\t\tconst subtitleCollection = subtitle || []\n\t\tconst self = this\n\t\tself.state = {\n\t\t\tcurrentIndex,\n\t\t\ttitle:[...titleCollection],\n\t\t\tsubtitle:[...subtitleCollection],\n\t\t\tprogress: props.progress || 0,\n\t\t}\n\t\tself.cvs = React.createRef()\n\t}\n\n\tcomponentWillUnmount(){\n\t\tthis.shouldContinueHeartbeat = false\n\t}\n\trender(){\n\n\t\tconst titles = this.state.title.map((title, index)=><div className=\"card_titles card__title\" key={index}>{title}</div>)\n\t\tconst subtitles = this.state.subtitle.map((subtitle, index)=><div className=\"card_subtitles card__subtitle\" key={index}>{subtitle}</div>)\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<div className=\"card__body\">\n\t\t\t\t\t<div className=\"order\">{this.props.currentIndex + 1}</div>\n\t\t\t\t\t<CardToggleButton startOff={false} isTrue={this.state.isActive}/>\n\t\t\t\t\t<div className=\"card__titles\">{titles}</div>\n\t\t\t\t\t<div className=\"card__subtitles\">{subtitles}</div>\n\t\t\t\t\t<div className=\"spacer\"></div>\n\t\t\t\t</div>\n\t\t\t\t{this.props.hasProgress ? (<ProgressBar progress={this.state.progress}/>):null}\n\t\t\t</div>\n\t\t)\n\n\t}\n}"]}